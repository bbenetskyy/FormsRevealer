<Project Sdk="MSBuild.Sdk.Extras/2.0.29">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;Xamarin.iOS10;MonoAndroid81</TargetFrameworks>

        <!--Assembly and Namespace info -->
        <AssemblyName>FormsRevealer</AssemblyName>
        <RootNamespace>FormsRevealer</RootNamespace>

        <Product>$(AssemblyName) ($(TargetFramework))</Product>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyFileVersion>0.1.0.0</AssemblyFileVersion>
        <Version>0.1.0.0</Version>
        <NeutralLanguage>en</NeutralLanguage>

        <!-- NuGet Info -->
        <PackageId>FormsRevealer</PackageId>
        <PackageVersion>0.1.0.0</PackageVersion>

        <PackageReleaseNotes>First release. Check out the GitHub page for info and a sample project: https://github.com/mariusmuntean/FormsRevealer</PackageReleaseNotes>
        <PackageTags>xamarin.forms, skiasharp, custom-control, animation, reveal, iOS, Android</PackageTags>

        <Title>FormsRevealer</Title>
        <Summary>Control that displays its child-view with a reveal animation</Summary>
        <Description>Control that displays its child-view with a reveal animation</Description>
        <Owners>Marius Muntean</Owners>
        <Authors>Marius Muntean</Authors>
        <Copyright>Copyright 2019</Copyright>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageProjectUrl>https://github.com/mariusmuntean/FormsRevealer</PackageProjectUrl>

        <!--Don't auto add files for me, I will tell you -->
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>

        <!-- Helper to add defines-->
        <DefineConstants>$(DefineConstants);</DefineConstants>

        <!--Assembly and Namespace info -->

        <!--Version of C# to use -->
        <LangVersion>default</LangVersion>

    </PropertyGroup>

    <!-- Define what happens on build and release -->
    <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
        <DebugType>full</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
        <DebugType>pdbonly</DebugType>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>

        <!-- If we want a nuget package add this -->
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
      <OutputPath>bin\Debug\</OutputPath>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
      <OutputPath>bin\Release\</OutputPath>
    </PropertyGroup>
    <ItemGroup>
        <!-- This None is here so the conditionally included files show up in the Solution Explorer -->
        <None Include="**\*.cs;**\*.xml;**\*.axml;**\*.png" Exclude="obj\**\*.*;bin\**\*.*;bin;obj" />

        <!--NuGet that bring in good stuff -->
        <PackageReference Include="MSBuild.Sdk.Extras" Version="2.0.29" PrivateAssets="All" />
        <PackageReference Include="SkiaSharp.Views.Forms" Version="1.68.0" />
        <PackageReference Include="Xamarin.Forms" Version="4.3.0.947036" />

        <!-- We will compile anything ending in .shared.cs  You can change this -->
        <Compile Include="**\*.shared.cs" />
    </ItemGroup>

    <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
        <Compile Include="**\*.droid.cs" />
        <!-- if you have resources add this
        <AndroidResource Include="Resources\**\*.axml" />
        <AndroidResource Include="Resources\**\*.xml" />
        <AndroidResource Include="Resources\**\*.png" />
        -->
    </ItemGroup>

    <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
        <Compile Include="**\*.ios.cs" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="Platforms\iOS" />
        <Folder Include="Platforms\Droid" />
        
    </ItemGroup>

    <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />
</Project>
